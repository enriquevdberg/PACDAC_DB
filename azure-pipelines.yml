# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SqlAzureDacpacDeployment@1
  inputs:
    AuthenticationType: 'server'
    azureConnectionType: 'ConnectedServiceNameARM'
    azureSubscription: 'dacpac_test'
    ServerName: '105.245.99.59, 1433'
    DatabaseName: 'PACDAC_TEST'
    SqlUsername: 'FOURIER\VanderbergE'
    deployType: 'DacpacTask'
    DeploymentAction: 'Publish'
    IpDetectionMethod: 'AutoDetect'
    DacpacFile: '$(Build.SourcesDirectory)\bin\Release\Automate DACPAC Deployment.dacpac'
    #ConnectionString: 'Server=105.245.99.59;Database=PACDAC_TEST;Integrated Security=True;TrustServerCertificate=True;'
    

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

